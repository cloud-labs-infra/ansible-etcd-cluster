# {{ ansible_managed }}
## Member flags

# This value is referenced as this node's own entries listed in the --initial-cluster flag
# (e.g., default=http://localhost:2380). This needs to match the key used in the flag if using
# static bootstrapping. When using discovery, each member must have a unique name. Hostname or
# machine-id can be a good choice.
name: '{{ etcd_node_name }}'

# Path to the data directory
data-dir: {{ etcd_data_dir }}

# Path to the dedicated wal directory. If this flag is set, etcd will write the WAL files to
# the walDir rather than the dataDir. This allows a dedicated disk to be used, and helps avoid
# io competition between logging and other IO operations
wal-dir: {{ etcd_wal_dir }}

# Number of committed transactions to trigger a snapshot to disk.
# default: 100000
snapshot-count: {{ etcd_snapshot_count }}

# Time (in milliseconds) of a heartbeat interval
# default: 100
heartbeat-interval: {{ etcd_heartbeat_interval }}

# Time (in milliseconds) for an election to timeout
# default: 1000
election-timeout: {{ etcd_election_timeout }}

# Whether to fast-forward initial election ticks on boot for faster election. When it is true,
# then local member fast-forwards election ticks to speed up "initial" leader election trigger.
# This benefits the case of larger election ticks. Disabling this would slow down initial
# bootstrap process for cross datacenter deployments. Make your own tradeoffs by configuring
# this flag at the cost of slow initial bootstrap.
# default: true
initial-election-tick-advance: {{ etcd_initial_election_tick_advance }}

# List of URLs to listen on for peer traffic. This flag tells the etcd to accept incoming
# requests from its peers on the specified scheme://IP:port combinations. Scheme can be http
# or https. Alternatively, use unix://<file-path> or unixs://<file-path> for unix sockets.
# If 0.0.0.0 is specified as the IP, etcd listens to the given port on all interfaces. If an
# IP address is given as well as a port, etcd will listen on the given port and interface.
# Multiple URLs may be used to specify a number of addresses and ports to listen on. The etcd
# will respond to requests from any of the listed addresses and ports.
# default: "http://localhost:2380"
listen-peer-urls: {{ etcd_listen_peer_urls }}

# List of URLs to listen on for client traffic. This flag tells the etcd to accept incoming
# requests from the clients on the specified scheme://IP:port combinations. Scheme can be
# either http or https. Alternatively, use unix://<file-path> or unixs://<file-path> for unix
# sockets. If 0.0.0.0 is specified as the IP, etcd listens to the given port on all interfaces.
# If an IP address is given as well as a port, etcd will listen on the given port and interface.
# Multiple URLs may be used to specify a number of addresses and ports to listen on. The etcd
# will respond to requests from any of the listed addresses and ports.
# default: "http://localhost:2379"
listen-client-urls: {{ etcd_listen_client_urls }}

# Maximum number of snapshot files to retain (0 is unlimited)
# default: 5
max-snapshots: {{ etcd_max_snapshots }}

# Maximum number of wal files to retain (0 is unlimited)
# default: 5
max-wals: {{ etcd_max_wals }}

# Comma-separated white list of origins for CORS (cross-origin resource sharing).
# default: ""
cors: {{ etcd_cors }}

# Raise alarms when backend size exceeds the given quota (0 defaults to low space quota).
# default: 0
quota-backend-bytes: {{ etcd_quota_backend_bytes }}

# BackendBatchLimit is the maximum operations before commit the backend transaction.
# default: 0
backend-batch-limit: {{ etcd_backend_batch_limit }}

# The freelist type that etcd backend(bboltdb) uses (array and map are supported types).
# default: map
backend-bbolt-freelist-type: {{ etcd_backend_bbolt_freelist_type }}

# BackendBatchInterval is the maximum time before commit the backend transaction.
# default: 0
backend-batch-interval: {{ etcd_backend_batch_interval }}

# Maximum number of operations permitted in a transaction.
# default: 128
max-txn-ops: {{ etcd_max_txn_ops }}

# Maximum client request size in bytes the server will accept.
# default: 1572864
max-request-bytes: {{ etcd_max_request_bytes }}

# Minimum duration interval that a client should wait before pinging server.
# default (sec): 5
grpc-keepalive-min-time: {{ etcd_grpc_keepalive_min_time }}

# Frequency duration of server-to-client ping to check if a connection is alive (0 to disable).
# default (sec): 7200
grpc-keepalive-interval: {{ etcd_grpc_keepalive_interval }}

# Additional duration of wait before closing a non-responsive connection (0 to disable).
# default (sec): 20
grpc-keepalive-timeout: {{ etcd_grpc_keepalive_timeout }}

## Clustering flags

# List of this member's peer URLs to advertise to the rest of the cluster. These addresses are
# used for communicating etcd data around the cluster. At least one must be routable to all
# cluster members. These URLs can contain domain names.
# default: "http://localhost:2380"
initial-advertise-peer-urls: {{ etcd_initial_advertise_peer_urls }}

# Initial cluster configuration for bootstrapping.
# The key is the value of the --name flag for each node provided. The default uses default for
# the key because this is the default for the --name flag.
# default: "default=http://localhost:2380"
initial-cluster: {{ etcd_initial_cluster }}

# Initial cluster state ("new" or "existing"). Set to new for all members present during initial
# static or DNS bootstrapping. If this option is set to existing, etcd will attempt to join the
# existing cluster. If the wrong value is set, etcd will attempt to start but fail safely.
# default: "new"
initial-cluster-state: {{ etcd_initial_cluster_state }}

# Initial cluster token for the etcd cluster during bootstrap.
# default: "etcd-cluster"
initial-cluster-token: '{{ etcd_initial_cluster_token }}'

# List of this member's client URLs to advertise to the rest of the cluster. These URLs can contain
# domain names.
# Be careful if advertising URLs such as http://localhost:2379 from a cluster member and are using
# the proxy feature of etcd. This will cause loops, because the proxy will be forwarding requests
# to itself until its resources (memory, file descriptors) are eventually depleted.
# default: "http://localhost:2379"
advertise-client-urls: {{ etcd_advertise_client_urls }}

# Discovery URL used to bootstrap the cluster.
# default: ""
discovery: {{ etcd_discovery }}

# DNS srv domain used to bootstrap the cluster.
# default: ""
discovery-srv: {{ etcd_discovery_srv }}

# Suffix to the DNS srv name queried when bootstrapping using DNS.
# default: ""
discovery-srv-name: {{ etcd_discovery_srv_name }}

# Expected behavior ("exit" or "proxy") when discovery services fails. "proxy" supports v2 API only.
# default: "proxy"
discovery-fallback: '{{ etcd_discovery_fallback }}'

# HTTP proxy to use for traffic to discovery service.
# default: ""
discovery-proxy: {{ etcd_discovery_proxy }}

# Reject reconfiguration requests that would cause quorum loss.
# default: true
strict-reconfig-check: {{ etcd_strict_reconfig_check }}

# Auto compaction retention for mvcc key value store in hour. 0 means disable auto compaction.
# default: 0
auto-compaction-retention: '{{ etcd_auto_compaction_retention }}'

# Interpret 'auto-compaction-retention' one of: 'periodic', 'revision'. 'periodic' for duration
# based retention, defaulting to hours if no time unit is provided (e.g. '5m'). 'revision' for
# revision number based retention.
# default: periodic
auto-compaction-mode: {{ etcd_auto_compaction_mode }}

# Accept etcd V2 client requests
# default: false
enable-v2: {{ etcd_enable_v2 }}

## Proxy flags

# Proxy mode setting ("off", "readonly" or "on").
# default: "off"
proxy: '{{ etcd_proxy }}'

# Time (in milliseconds) an endpoint will be held in a failed state before being reconsidered for
# proxied requests.
# default: 5000
proxy-failure-wait: {{ etcd_proxy_failure_wait }}

# Time (in milliseconds) of the endpoints refresh interval.
# default: 30000
proxy-refresh-interval: {{ etcd_proxy_refresh_interval }}

# Time (in milliseconds) for a dial to timeout or 0 to disable the timeout
# default: 1000
proxy-dial-timeout: {{ etcd_proxy_dial_timeout }}

# Time (in milliseconds) for a write to timeout or 0 to disable the timeout.
# default: 5000
proxy-write-timeout: {{ etcd_proxy_write_timeout }}

# Time (in milliseconds) for a read to timeout or 0 to disable the timeout.
# Don't change this value if using watches because use long polling requests.
# default: 0
proxy-read-timeout: {{ etcd_proxy_read_timeout }}


## Security flags

client-transport-security:
  # DEPRECATED
  # Path to the client server TLS CA file. --ca-file ca.crt could be replaced by --trusted-ca-file ca.crt
  # --client-cert-auth and etcd will perform the same.
  # default: ""
  # ca-file:

  # Path to the client server TLS cert file.
  # default: ""
  cert-file: {{ etcd_cert_file }}

  # Path to the client server TLS key file.
  # default: ""
  key-file: {{ etcd_key_file }}

  # Enable client cert authentication.
  # CN authentication is not supported by gRPC-gateway.
  # default: false
  client-cert-auth: {{ etcd_client_cert_auth }}

  # Path to the client certificate revocation list file.
  # default: ""
  client-crl-file: {{ etcd_client_crl_file }}

  # Allowed TLS name for client cert authentication.
  # default: ""
  client-cert-allowed-hostname: {{ etcd_client_cert_allowed_hostname }}

  # Path to the client server TLS trusted CA cert file.
  # default: ""
  trusted-ca-file: {{ etcd_trusted_ca_file }}

  # Client TLS using generated certificates
  # default: false
  auto-tls: {{ etcd_auto_tls }}

peer-transport-security:
  # DEPRECATED
  # Path to the peer server TLS CA file. --peer-ca-file ca.crt could be replaced by --peer-trusted-ca-file
  # ca.crt --peer-client-cert-auth and etcd will perform the same.
  # default: ""
  #peer-ca-file:

  # Path to the peer server TLS cert file. This is the cert for peer-to-peer traffic, used both for
  # server and client.
  # default: ""
  cert-file: {{ etcd_peer_cert_file }}

  # Path to the peer server TLS key file. This is the key for peer-to-peer traffic, used both for
  # server and client.
  # default: ""
  key-file: {{ etcd_peer_key_file }}

  # Enable peer client cert authentication.
  # default: false
  client-cert-auth: {{ etcd_peer_client_cert_auth }}

  # Path to the peer certificate revocation list file.
  # default: ""
  crl-file: {{ etcd_peer_crl_file }}

  # Path to the peer server TLS trusted CA file.
  # default: ""
  trusted-ca-file: {{ etcd_peer_trusted_ca_file }}

  # Peer TLS using generated certificates
  # default: false
  auto-tls: {{ etcd_peer_auto_tls }}

# Allowed CommonName for inter peer authentication.
# default: ""
peer-cert-allowed-cn: {{ etcd_peer_cert_allowed_cn }}

# Allowed TLS certificate name for inter peer authentication.
# default: ""
peer-cert-allowed-hostname: {{ etcd_peer_cert_allowed_hostname }}

# Comma-separated list of supported TLS cipher suites between server/client and peers.
# default: ""
cipher-suites: {{ etcd_cipher_suites }}

## Logging flags

# Available from v3.4. WARNING: --logger=capnslog to be deprecated in v3.5.
# Specify 'zap' for structured logging or 'capnslog'.
# default: capnslog
logger: {{ etcd_logger }}

# Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd, or list
# of comma separated output targets.
# 'default' use 'stderr' config for v3.4 during zap logger migraion
# default: default
log-outputs: {{ etcd_log_outputs }}

# Available from v3.4.
# Configures log level. Only supports debug, info, warn, error, panic, or fatal.
# 'default' use 'info'.
# default: info
log-level: {{ etcd_log_level }}

# WARNING: to be deprecated in v3.5.
# Drop the default log level to DEBUG for all subpackages.
# default: false (INFO for all packages)
debug:  {{ etcd_debug }}

# WARNING: to be deprecated in v3.5.
# Set individual etcd subpackages to specific log levels.
# An example being etcdserver=WARNING,security=DEBUG
# default: "" (INFO for all packages)
log-package-levels: {{ etcd_log_package_levels }}

## Unsafe flags

# Please be CAUTIOUS when using unsafe flags because it will break the guarantees given by the
# consensus protocol. For example, it may panic if other members in the cluster are still alive.
# Follow the instructions when using these flags.
#
# Force to create a new one-member cluster. It commits configuration changes forcing to remove all
# existing members in the cluster and add itself, but is strongly discouraged. Please review the
# disaster recovery documentation for preferred v3 recovery procedures.
# default: false
force-new-cluster: {{ etcd_force_new_cluster }}

## Miscellaneous flags

# Print the version and exit.
# default: false
version: {{ etcd_version }}

## Profiling flags

# Enable runtime profiling data via HTTP server. Address is at client URL + "/debug/pprof/"
# default: false
enable-pprof: {{ etcd_enable_pprof }}

# Set level of detail for exported metrics, specify 'extensive' to include server side grpc
# histogram metrics.
# default: basic
metrics: {{ etcd_metrics }}

# List of additional URLs to listen on that will respond to both the /metrics and /health endpoints
# default: ""
listen-metrics-urls: {{ etcd_listen_metrics_urls }}

## Auth flags

# Specify a token type and token specific options, especially for JWT. Its format is
# "type,var1=val1,var2=val2,…".
# Possible type is 'simple' or 'jwt'. Possible variables are 'sign-method' for specifying a sign
# method of jwt (its possible values are 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512',
# 'RS256', 'RS384', 'RS512', 'PS256', 'PS384', or 'PS512'), 'pub-key' for specifying a path to a
# public key for verifying jwt, 'priv-key' for specifying a path to a private key for signing jwt,
# and 'ttl' for specifying TTL of jwt tokens.
#
# For asymmetric algorithms ('RS', 'PS', 'ES'), the public key is optional, as the private key
# contains enough information to both sign and verify tokens.
# default: "simple"
auth-token: {{ etcd_auth_token }}

# Specify the cost / strength of the bcrypt algorithm for hashing auth passwords. Valid values
# are between 4 and 31.
# default: 10
bcrypt-cost: {{ etcd_bcrypt_cost }}

## Experimental flags

# Duration of time between cluster corruption check passes
# default (sec): 0
experimental-corrupt-check-time: {{ etcd_experimental_corrupt_check_time }}

# Sets the maximum revisions deleted in each compaction batch.
# default: 1000
experimental-compaction-batch-limit: {{ etcd_experimental_compaction_batch_limit }}

# Skip verification of SAN field in client certificate for peer connections. This can be helpful e.g.
# if cluster members run in different networks behind a NAT.
#
# In this case make sure to use peer certificates based on a private certificate authority using
# --peer-cert-file, --peer-key-file, --peer-trusted-ca-file
# default: false
experimental-peer-skip-client-san-verification: {{ etcd_experimental_peer_skip_client_san_verification }}
